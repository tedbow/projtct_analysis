
stages:
  - run-tests
  - analyze-job
  - package-artifacts
  - release

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH


.analyze-projects-script: &analyze-projects-script
  - cp -R ./* /var/lib/drupalci/workspace/infrastructure/stats/project_analysis/
  - split -n l/${CI_NODE_INDEX}/${CI_NODE_TOTAL} artifacts/projects.tsv > /var/lib/drupalci/workspace/projects.tsv
  - echo "This run will analyze $(cat /var/lib/drupalci/workspace/projects.tsv | wc -l) projects."
  - echo "Starting at \"$(awk 'NR==1 {print $1; exit}' /var/lib/drupalci/workspace/projects.tsv)\" and end with \"$(awk 'END{print $1; exit}' /var/lib/drupalci/workspace/projects.tsv)\""
  - /var/lib/drupalci/workspace/infrastructure/stats/project_analysis/project_readiness.sh 9.4.x || true

  - mv /var/lib/drupalci/workspace/phpstan-results/* artifacts/phpstan-results/
  - mv /var/lib/drupalci/workspace/projects.tsv artifacts/projects_${CI_NODE_INDEX}.tsv
  - mv /var/lib/drupalci/workspace/analyzer_output.log artifacts/analyzer_output_${CI_NODE_INDEX}.log

run-unit-tests:
  image: drupalci/static_analysis:9.4.x
  stage: run-tests
  script:
    - cd project_analysis_utils
    - composer install
    - vendor/bin/phpunit tests/ --log-junit ../phpunit-report.xml
  artifacts:
    reports:
      junit: phpunit-report.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"

run-bot-against-testset:
  image: drupalci/static_analysis:9.4.x
  stage: analyze-job
  parallel: 4
  script:
    - mkdir -p artifacts/phpstan-results
    - cp project_analysis_utils/tests/project_list_files/projects_d10.tsv artifacts/projects.tsv
    - *analyze-projects-script
  artifacts:
    paths:
      - artifacts/projects.tsv
      - artifacts/projects_*.tsv
      - artifacts/analyzer_output_*.log
      - artifacts/phpstan-results
    expire_in: "1 month"
    when: always
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

analyze-job:
  image: drupalci/static_analysis:9.4.x
  stage: analyze-job
  parallel: 50
  script:
    - mkdir -p artifacts/phpstan-results
    - wget https://www.drupal.org/files/project_analysis/projects.tsv?$CI_JOB_ID -O artifacts/projects.tsv
    - *analyze-projects-script
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  artifacts:
    paths:
      - artifacts/projects.tsv
      - artifacts/projects_*.tsv
      - artifacts/analyzer_output_*.log
      - artifacts/phpstan-results
    expire_in: "2 months"
    when: always

package-artifacts:
  stage: package-artifacts
  script:
    - echo GE_JOB_ID=$CI_JOB_ID >> publish_results.env
    - echo "Packaging all results"
    - RUN_ARTIFFACT_COUNT=$(find ./artifacts -mindepth 1 -type f -name "projects_*.tsv" -printf x | wc -c)
    - PATCH_COUNT=$(find ./artifacts/phpstan-results -mindepth 1 -type f -name "*.patch" -printf x | wc -c)
    - PROJECTS_ANALYZED=$(cat ./artifacts/projects.tsv  | wc -l)
    - echo "There were ${PROJECTS_ANALYZED} projects analyzed split over ${RUN_ARTIFFACT_COUNT} different jobs."
    - echo "This run generated ${PATCH_COUNT} patches."
  artifacts:
    paths:
      - artifacts/projects.tsv
      - artifacts/projects_*.tsv
      - artifacts/analyzer_outpu*.log
      - artifacts/phpstan-results
    expire_in: "6 months"
    reports:
      # To ensure we've access to this file in the next stage
      dotenv: publish_results.env
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"


commit-artifacts:
  image: alpine/git
  stage: release
  script:
    - git fetch origin
    - git checkout --track origin/results
    - git remote set-url origin https://gitlab-access-token:${GITLAB_ACCESS_TOKEN}@git.drupalcode.org/project/project_analysis.git 
    - git config --global user.name "Bj√∂rn Brala"
    - git config --global user.email "bjorn@swis.nl"
    - git add artifacts
    - git commit -m "Run ${CI_PIPELINE_ID} of project analysis"
    - git tag ${CI_PIPELINE_ID}
    - git push && git push --tags
  needs:
    - job: package-artifacts
      artifacts: true
  rules:
    #- if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "master"
    - if: $CI_PIPELINE_SOURCE == "push"
